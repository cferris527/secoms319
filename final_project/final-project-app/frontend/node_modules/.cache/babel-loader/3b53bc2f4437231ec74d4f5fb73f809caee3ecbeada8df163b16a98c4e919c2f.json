{"ast":null,"code":"var _jsxFileName = \"D:\\\\COM S 319\\\\secoms319\\\\final_project\\\\final-project-app\\\\src\\\\App.js\";\nimport Navbar from './Navbar';\nimport Home from './pages/Home';\nimport Artists from './pages/Artists';\nimport Albums from './pages/Albums';\nimport Songs from './pages/Songs';\nimport Compare from './pages/Compare';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst express = require('express');\nconst app = express();\nconst path = require('path');\n\n// Serve static files (like JSON files)\napp.use(express.static(path.join(__dirname, 'public')));\napp.get('/artists', (req, res) => {\n  // Read artists.json and send it as a response\n  const artistsData = require('/data/artists.json');\n  res.json(artistsData);\n});\napp.get('/songs', (req, res) => {\n  // Read songs.json and send it as a response\n  const songsData = require('/data/songs.json');\n  res.json(songsData);\n});\n\n// Other server setup code...\n\nconst PORT = 3000; // Or any other port you want to use\napp.listen(PORT, () => {\n  console.log(`Server running on port ${PORT}`);\n});\nfunction App() {\n  let component;\n  switch (window.location.pathname) {\n    case \"/\":\n      component = /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 19\n      }, this);\n      break;\n    case \"/home\":\n      component = /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 19\n      }, this);\n      break;\n    case \"/artists\":\n      component = /*#__PURE__*/_jsxDEV(Artists, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }, this);\n      break;\n    case \"/albums\":\n      component = /*#__PURE__*/_jsxDEV(Albums, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }, this);\n      break;\n    case \"/songs\":\n      component = /*#__PURE__*/_jsxDEV(Songs, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }, this);\n      break;\n    case \"/compare\":\n      component = /*#__PURE__*/_jsxDEV(Compare, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }, this);\n      break;\n    default:\n      component = /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: component\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Home","Artists","Albums","Songs","Compare","jsxDEV","_jsxDEV","Fragment","_Fragment","express","require","app","path","use","static","join","__dirname","get","req","res","artistsData","json","songsData","PORT","listen","console","log","App","component","window","location","pathname","fileName","_jsxFileName","lineNumber","columnNumber","children","className","_c","$RefreshReg$"],"sources":["D:/COM S 319/secoms319/final_project/final-project-app/src/App.js"],"sourcesContent":["import Navbar from './Navbar'\r\n\r\nimport Home from './pages/Home'\r\nimport Artists from './pages/Artists'\r\nimport Albums from './pages/Albums'\r\nimport Songs from './pages/Songs'\r\nimport Compare from './pages/Compare'\r\n\r\nconst express = require('express');\r\nconst app = express();\r\nconst path = require('path');\r\n\r\n// Serve static files (like JSON files)\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\napp.get('/artists', (req, res) => {\r\n  // Read artists.json and send it as a response\r\n  const artistsData = require('/data/artists.json');\r\n  res.json(artistsData);\r\n});\r\n\r\napp.get('/songs', (req, res) => {\r\n  // Read songs.json and send it as a response\r\n  const songsData = require('/data/songs.json');\r\n  res.json(songsData);\r\n});\r\n\r\n// Other server setup code...\r\n\r\nconst PORT = 3000; // Or any other port you want to use\r\napp.listen(PORT, () => {\r\n  console.log(`Server running on port ${PORT}`);\r\n});\r\n\r\n\r\nfunction App() {\r\n  let component\r\n  switch (window.location.pathname) {\r\n    case \"/\":\r\n      component = <Home />\r\n      break\r\n    case \"/home\":\r\n      component = <Home />\r\n      break\r\n    case \"/artists\":\r\n      component = <Artists />\r\n      break\r\n    case \"/albums\":\r\n      component = <Albums />\r\n      break\r\n    case \"/songs\":\r\n      component = <Songs />\r\n      break\r\n    case \"/compare\":\r\n      component = <Compare />\r\n      break\r\n    default:\r\n      component = <Home />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"container\">{component}</div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}