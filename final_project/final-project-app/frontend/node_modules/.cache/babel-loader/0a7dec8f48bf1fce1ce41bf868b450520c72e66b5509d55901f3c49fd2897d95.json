{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nconst serverURL = \"http://localhost:8080\";\nconst Home = () => {\n  _s();\n  const [artists, setArtists] = useState([]);\n  const [songs, setSongs] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const artistsResponse = await fetch(serverURL + '/artistInfo');\n        const artistsData = await artistsResponse.json();\n        setArtists(artistsData);\n        const songsResponse = await fetch(serverURL + '/songInfo');\n        const songsData = await songsResponse.json();\n        setSongs(songsData);\n        const albumsResponse = await fetch(serverURL + '/albumInfo');\n        const albumsData = await albumsResponse.json();\n        setAlbums(albumsData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n};\n_s(Home, \"JHX0fEIYxUMN4r0tBdiFqZXp7+k=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","serverURL","Home","_s","artists","setArtists","songs","setSongs","fetchData","artistsResponse","fetch","artistsData","json","songsResponse","songsData","albumsResponse","albumsData","setAlbums","error","console","_c","$RefreshReg$"],"sources":["C:/Users/conno/secoms319/final_project/final-project-app/frontend/src/pages/Compare.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nconst serverURL = \"http://localhost:8080\";\r\nconst Home = () => {\r\n    const [artists, setArtists] = useState([]);\r\n    const [songs, setSongs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n          try {\r\n            const artistsResponse = await fetch(serverURL + '/artistInfo');\r\n            const artistsData = await artistsResponse.json();\r\n            setArtists(artistsData);\r\n    \r\n            const songsResponse = await fetch(serverURL + '/songInfo');\r\n            const songsData = await songsResponse.json();\r\n            setSongs(songsData);\r\n    \r\n            const albumsResponse = await fetch(serverURL + '/albumInfo');\r\n            const albumsData = await albumsResponse.json();\r\n            setAlbums(albumsData);\r\n          } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n          }\r\n        };\r\n    \r\n        fetchData();\r\n      }, []);\r\n\r\n}\r\nexport default Home;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,MAAMC,SAAS,GAAG,uBAAuB;AACzC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,eAAe,GAAG,MAAMC,KAAK,CAACT,SAAS,GAAG,aAAa,CAAC;QAC9D,MAAMU,WAAW,GAAG,MAAMF,eAAe,CAACG,IAAI,CAAC,CAAC;QAChDP,UAAU,CAACM,WAAW,CAAC;QAEvB,MAAME,aAAa,GAAG,MAAMH,KAAK,CAACT,SAAS,GAAG,WAAW,CAAC;QAC1D,MAAMa,SAAS,GAAG,MAAMD,aAAa,CAACD,IAAI,CAAC,CAAC;QAC5CL,QAAQ,CAACO,SAAS,CAAC;QAEnB,MAAMC,cAAc,GAAG,MAAML,KAAK,CAACT,SAAS,GAAG,YAAY,CAAC;QAC5D,MAAMe,UAAU,GAAG,MAAMD,cAAc,CAACH,IAAI,CAAC,CAAC;QAC9CK,SAAS,CAACD,UAAU,CAAC;MACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDV,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;AAEZ,CAAC;AAAAL,EAAA,CA1BKD,IAAI;AAAAkB,EAAA,GAAJlB,IAAI;AA2BV,eAAeA,IAAI;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}